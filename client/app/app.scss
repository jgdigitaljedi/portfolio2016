/**
 * App-wide Styles
 */
$blue-gray: #607d8b;
$dark-amber: #ffc107;
$flat-black: #212121;
$flat-white: #f1f1f1;

 @import url('http://fonts.googleapis.com/css?family=Viga|Signika');
 @import url('https://fonts.googleapis.com/css?family=Exo:400,700,800,400italic,700italic,900');
 @font-face {
   font-family: 'langdon';
   src: url('../assets/fonts/langdon-webfont.eot');
   src: url('../assets/fonts/langdon-webfont.eot?#iefix') format('embedded-opentype'),
   url('../assets/fonts/langdon-webfont.woff') format('woff'),
   url('../assets/fonts/langdon-webfont.ttf') format('truetype'),
   url('../assets/fonts/langdon-webfont.svg#Langdon') format('svg');
 }
 html {
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
  text-rendering: optimizeLegibility !important;
 }

 body {
  font-family: 'Exo', sans-serif;
  color: $flat-white;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
  text-rendering: optimizeLegibility !important;
 }

 .no-scroll {
   overflow: hidden !important;
 }

 .day {
   background-color: $flat-white;
   color: $flat-black;
 }

 .day-modal {
  color: $flat-black;
  background-color: #B0BEC5;
 }

 .night {
   background-color: #040615;
   color: $flat-white;
 }

 .fb-like, .twitter-share-button, .twitter-follow-button {
  margin: 8px;
 }
@mixin box_shadow ($level) {

    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }

}

@mixin inset_shadow ($level) {

    @if $level == 1 {
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.12), inset 0px 1px 2px rgba(0, 0, 0, 0.24);
    } @else if $level == 2 {
        box-shadow: inset 0 3px 6px rgba(0,0,0,0.16), inset 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: inset 0 10px 20px rgba(0,0,0,0.19), inset 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: inset 0 14px 28px rgba(0,0,0,0.25), inset 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: inset 0 19px 38px rgba(0,0,0,0.30), inset 0 15px 12px rgba(0,0,0,0.22);
    } @else if $level == 6 {
        box-shadow: inset 0 0 60px 15px rgba(0,0,0,0.40), inset 0 0 20px 5px rgba(0,0,0,0.33);
    }

}
$prefix:'-moz-', '-webkit-', '-o-', '-ms-', '';
@mixin keyframe-fadeIn {
  0%   { opacity:0; }
  100% { opacity:1; }
}
@-moz-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-webkit-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-o-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-ms-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@keyframes fadeIn {
  @include keyframe-fadeIn;
}
@mixin fade-In($arg) {
  $keyframe-name:fadeIn;
  $duration:$arg;
  @each $p in $prefix {
    #{$p}animation:$keyframe-name $duration;
  }
}

@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // for Chrome Windows
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}
 .main-shell {

  .md-toolbar-tools {
    @include box_shadow(1);    
  }
   .profile-container {
     height: 100%;
     font-size: 14px;

     .profile-name {
       font-weight: 500;
     }
   }
 }

 .twitter-follow-button {
  margin-top: 0;
 }

// Component styles are injected through grunt
// injector
@import 'about/about.scss';
@import 'blog/blog.scss';
@import 'contact/contact.scss';
@import 'fun/fun.scss';
@import 'main/main.scss';
@import 'projects/projects.scss';
@import 'resume/resume.scss';
@import 'social/social.scss';
@import 'directives/customChart.scss';
// endinjector


